import requests
from bs4 import BeautifulSoup
import csv

URL = 'https://auto.ria.com/newauto/marka-jeep/'
HEADERS = {
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0', 'accept': '*/*'
}
HOST = 'https://auto.ria.com'
FILE = 'cars.csv'


def get_html(url, params=None):
    r = requests.get(url, headers=HEADERS, params=params)
    return r


def save_file(ithems, path):
    with open(path, 'w', newline='') as file:
        writher = csv.writer(file, delimiter=';')
        writher.writerow(['Марка', 'Ссылка', 'Цена в долларах', 'цена в гривнах', 'Местоположение'])
        for item in ithems:
            writher.writerow([item['title'], item['link'], item['usd_price'], item['grey_price'], item['location']])


def get_pages_count(html):
    soup = BeautifulSoup(html, 'html.parser')
    pagenation = soup.find_all('span', class_='mhide')
    if pagenation:
        return int(pagenation[-1].get_text())
    else:
        return 1
    print(pagenation)


def get_content(html):
    soup = BeautifulSoup(html, 'html.parser')
    items = soup.find_all('div', class_='proposition')

    cars = []
    for item in items:
        cars.append({
            'title': item.find('div', class_='proposition_title').get_text(strip=True),
            'link': HOST + item.find('a').get('href'),
            'usd_price': item.find('span', class_='green').get_text(strip=True),
            'grey_price': item.find('span', class_='grey size13').get_text(strip=True),
            'location': item.find('svg', class_='svg-i16_pin').find_next('strong').get_text()
        })
    return (cars)


def parse():
    html = get_html(URL)
    if html.status_code == 200:
        cars = []
        pages_count = get_pages_count(html.text)
        for page in range(1, pages_count + 1):
            print(f'Парсинг страницы {page} из {pages_count}...')
            html = get_html(URL, params={'page': page})
            cars.extend(get_content(html.text))
        save_file(cars,FILE)
        print(f'Получено {len(cars)} автомобилей')
        print(cars)
    else:
        print('ERROR')


parse()
